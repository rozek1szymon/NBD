db.people.aggregate([
    {
        $project: {
            sex: 1,
            weight: 1,
            height: 1
        }
    },
    {
        $group: {
            _id: "$sex",
            avgWeight: {$avg: {$toDouble: "$weight"}},
            avgHeight: {$avg: {$toDouble: "$height"}}
        }
    }
])

// map-reduce
var map = function() {
    var key = this.sex;
    var value = {
        weight: parseFloat(this.weight),
        height: parseFloat(this.height),
        count: 1
    };
    emit(key, value);
}

var reduce = function(key, values) {
    reducedValue = {
        count: 0,
        totalWeight: 0,
        totalHeight: 0
    };

    for(var i = 0; i<values.length; i++) {
        reducedValue.count += values[i].count;
        reducedValue.totalWeight += values[i].weight;
        reducedValue.totalHeight += values[i].height;
    }

    return reducedValue;
}

var finalize = function(key, reducedValue) {
    reducedValue.avgWeight = reducedValue.totalWeight/reducedValue.count;
    reducedValue.avgHeight = reducedValue.totalHeight/reducedValue.count;

    return reducedValue;
}

db.people.mapReduce(
    map,
    reduce,
    {
        out: "map_reduce_example",
        query: { },
        finalize: finalize
    }
)
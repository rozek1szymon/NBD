//agregacja
db.people.aggregate([
    {
        $project: {
            nationality: 1,
            bmi: { $divide: [ {$toDouble: "$weight"}, { $pow: [ {$divide:[{$toDouble: "$height"}, 100]}, 2] }] },
            avgBmi: 1 ,
            minBmi: 1,
            maxBmi: 1
        }
    },
    {
        $group: {
            _id: "$nationality",
            avgBmi: {$avg: "$bmi"},
            minBmi: {$min: "$bmi"},
            maxBmi: {$max: "$bmi"}
        }
    }
])

// map-reduce
var map = function() {
    var key = this.nationality;
    var value = {
        weight: parseFloat(this.weight),
        height: parseFloat(this.height)
    };
    emit(key, value);
}

var reduce = function(key, values) {
    reducedValue = {
        avgBmi: 0,
        maxBmi: 0,
        minBmi: 1000,
        totalBmi: 0,
        count: 0
    };

    for(var i = 0; i<values.length; i++) {
        var bmi = values[i].weight / Math.pow( (values[i].height / 100), 2)
        reducedValue.count++;
        reducedValue.totalBmi += bmi;
        reducedValue.minBmi = Math.min(reducedValue.minBmi, bmi);
        reducedValue.maxBmi = Math.max(reducedValue.maxBmi, bmi);
    }

    return reducedValue;
}

var finalize = function(key, reducedValue) {
    reducedValue.avgBmi = reducedValue.totalBmi/reducedValue.count;

    return reducedValue;
}

db.people.mapReduce(
    map,
    reduce,
    {
        out: "map_reduce_bmi",
        finalize: finalize
    }
)